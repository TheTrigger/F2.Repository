// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oibi.Repository.Demo.Models;

namespace Oibi.Repository.Demo.Models.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Oibi.Repository.Demo.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7dfaa14-0c5d-475a-b78b-6e9014d10a3e"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 773, DateTimeKind.Local).AddTicks(714),
                            Name = "William Shakespeare",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cec0fb8e-4935-4e85-a271-2a2814d632cd"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 775, DateTimeKind.Local).AddTicks(2681),
                            Name = "Oibi.dev",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Oibi.Repository.Demo.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e399eca2-b840-4210-99c6-33becc6a7d4b"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 776, DateTimeKind.Local).AddTicks(3294),
                            Isbn = "1234567890123",
                            Title = "Hamlet",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("80d521c9-431a-4324-b078-8d25e9d2da4c"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 776, DateTimeKind.Local).AddTicks(4153),
                            Isbn = "0987654321045",
                            Title = "King Lear",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("642d6404-6957-4361-83e8-10098044ec6a"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 776, DateTimeKind.Local).AddTicks(4179),
                            Title = "Random Othello w/ no authors",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Oibi.Repository.Demo.Models.BookAuthors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22b5e183-655a-fca7-92c1-3abc998e8ac3"),
                            AuthorId = new Guid("e7dfaa14-0c5d-475a-b78b-6e9014d10a3e"),
                            BookId = new Guid("e399eca2-b840-4210-99c6-33becc6a7d4b"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 776, DateTimeKind.Local).AddTicks(4806),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("54c50511-81fe-c049-283b-f115af97335f"),
                            AuthorId = new Guid("e7dfaa14-0c5d-475a-b78b-6e9014d10a3e"),
                            BookId = new Guid("80d521c9-431a-4324-b078-8d25e9d2da4c"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 776, DateTimeKind.Local).AddTicks(5702),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9b9e0193-44b8-52c3-c6b8-c1f1d871fd4b"),
                            AuthorId = new Guid("cec0fb8e-4935-4e85-a271-2a2814d632cd"),
                            BookId = new Guid("80d521c9-431a-4324-b078-8d25e9d2da4c"),
                            CreatedAt = new DateTime(2020, 2, 8, 9, 1, 6, 776, DateTimeKind.Local).AddTicks(5732),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Oibi.Repository.Demo.Models.BookAuthors", b =>
                {
                    b.HasOne("Oibi.Repository.Demo.Models.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oibi.Repository.Demo.Models.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
